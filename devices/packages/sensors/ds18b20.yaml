sensor:
  - platform: dallas
    id: dallas${index}
    index: ${index}
    resolution: 11
    filters:
      - filter_out: nan
    on_value:
      - lambda: !lambda |-
          char addressTopic [100];
          std::map<std::string, std::string>::iterator iterator;
          std::string sensorAddress = id(dallas${index}).get_address_name();
          std::string sensorValue = esphome::value_accuracy_to_string(id(dallas${index}).state, 1);
          sprintf(addressTopic, "temperature/sensor/%s/state", sensorAddress.c_str());
          id(mqtt_client).publish(addressTopic, sensorValue);
          iterator = id(sensor_names).find(sensorAddress);
          if (iterator != id(sensor_names).end()) {
            const char* sensorName = id(sensor_names)[sensorAddress].c_str();
            sprintf(addressTopic, "temperature/sensor/%s/state", sensorName);
            id(mqtt_client).publish(addressTopic, sensorValue);
          }
